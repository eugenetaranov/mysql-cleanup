name: Release

on:
  workflow_run:
    workflows: ["Tests"]
    types:
      - completed
    branches:
      - main
  push:
    tags:
      - 'v*'

env:
  REGISTRY: docker.io
  IMAGE_NAME: eugenetaranov/mysql-cleanup

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build binaries
      run: |
        # Set version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        
        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X main.version=$VERSION" -o mysql-cleanup-linux-amd64 .
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X main.version=$VERSION" -o mysql-cleanup-linux-arm64 .
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X main.version=$VERSION" -o mysql-cleanup-darwin-amd64 .
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X main.version=$VERSION" -o mysql-cleanup-darwin-arm64 .
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -X main.version=$VERSION" -o mysql-cleanup-windows-amd64.exe .
        GOOS=windows GOARCH=arm64 go build -ldflags="-s -w -X main.version=$VERSION" -o mysql-cleanup-windows-arm64.exe .

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          mysql-cleanup-linux-amd64
          mysql-cleanup-linux-arm64
          mysql-cleanup-darwin-amd64
          mysql-cleanup-darwin-arm64
          mysql-cleanup-windows-amd64.exe
          mysql-cleanup-windows-arm64.exe
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    needs: build
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max 
